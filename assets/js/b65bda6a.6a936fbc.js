(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[85512],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return d},kt:function(){return N}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),l=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,o=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=l(a),N=n,y=s["".concat(o,".").concat(N)]||s[N]||k[N]||p;return a?r.createElement(y,i(i({ref:t},d),{},{components:a})):r.createElement(y,i({ref:t},d))}));function N(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,i=new Array(p);i[0]=s;var m={};for(var o in t)hasOwnProperty.call(t,o)&&(m[o]=t[o]);m.originalType=e,m.mdxType="string"==typeof e?e:n,i[1]=m;for(var l=2;l<p;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},26688:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return m},metadata:function(){return o},toc:function(){return l},default:function(){return k}});var r=a(74034),n=a(79973),p=(a(67294),a(3905)),i={id:"knex.entityrepository",title:"Class: EntityRepository<T>",sidebar_label:"EntityRepository",custom_edit_url:null,hide_title:!0},m="Class: EntityRepository<T>",o={unversionedId:"api/classes/knex.entityrepository",id:"version-4.5/api/classes/knex.entityrepository",isDocsHomePage:!1,title:"Class: EntityRepository<T>",description:"knex.EntityRepository",source:"@site/versioned_docs/version-4.5/api/classes/knex.entityrepository.md",sourceDirName:"api/classes",slug:"/api/classes/knex.entityrepository",permalink:"/docs/api/classes/knex.entityrepository",editUrl:null,tags:[],version:"4.5",lastUpdatedBy:"Niko Sams",lastUpdatedAt:1633527974,formattedLastUpdatedAt:"10/6/2021",frontMatter:{id:"knex.entityrepository",title:"Class: EntityRepository<T>",sidebar_label:"EntityRepository",custom_edit_url:null,hide_title:!0},sidebar:"version-4.5/API",previous:{title:"EntityManager",permalink:"/docs/api/classes/knex.entitymanager"},next:{title:"ObjectCriteriaNode",permalink:"/docs/api/classes/knex.objectcriterianode"}},l=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Properties",id:"properties",children:[{value:"_em",id:"_em",children:[]},{value:"entityName",id:"entityname",children:[]}]},{value:"Accessors",id:"accessors",children:[{value:"em",id:"em",children:[]}]},{value:"Methods",id:"methods",children:[{value:"assign",id:"assign",children:[]},{value:"canPopulate",id:"canpopulate",children:[]},{value:"count",id:"count",children:[]},{value:"create",id:"create",children:[]},{value:"createQueryBuilder",id:"createquerybuilder",children:[]},{value:"find",id:"find",children:[]},{value:"findAll",id:"findall",children:[]},{value:"findAndCount",id:"findandcount",children:[]},{value:"findOne",id:"findone",children:[]},{value:"findOneOrFail",id:"findoneorfail",children:[]},{value:"flush",id:"flush",children:[]},{value:"getKnex",id:"getknex",children:[]},{value:"getReference",id:"getreference",children:[]},{value:"map",id:"map",children:[]},{value:"merge",id:"merge",children:[]},{value:"nativeDelete",id:"nativedelete",children:[]},{value:"nativeInsert",id:"nativeinsert",children:[]},{value:"nativeUpdate",id:"nativeupdate",children:[]},{value:"persist",id:"persist",children:[]},{value:"persistAndFlush",id:"persistandflush",children:[]},{value:"persistLater",id:"persistlater",children:[]},{value:"populate",id:"populate",children:[]},{value:"remove",id:"remove",children:[]},{value:"removeAndFlush",id:"removeandflush",children:[]},{value:"removeLater",id:"removelater",children:[]}]}],d={toc:l};function k(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,p.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"class-entityrepositoryt"},"Class: EntityRepository<T",">"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/knex"},"knex"),".EntityRepository"),(0,p.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"T"))))),(0,p.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},(0,p.kt)("em",{parentName:"a"},"EntityRepository")),"<T",">"),(0,p.kt)("p",{parentName:"li"},"\u21b3 ",(0,p.kt)("strong",{parentName:"p"},"EntityRepository")))),(0,p.kt)("h2",{id:"constructors"},"Constructors"),(0,p.kt)("h3",{id:"constructor"},"constructor"),(0,p.kt)("p",null,"+"," ",(0,p.kt)("strong",{parentName:"p"},"new EntityRepository"),"<T",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"_em"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqldriver"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqlconnection"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlConnection")),">",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"entityName"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entityname"},(0,p.kt)("em",{parentName:"a"},"EntityName")),"<T",">","): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.entityrepository"},(0,p.kt)("em",{parentName:"a"},"EntityRepository")),"<T",">"),(0,p.kt)("h4",{id:"type-parameters-1"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"T"))))),(0,p.kt)("h4",{id:"parameters"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"_em")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/classes/knex.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"td",href:"/docs/api/classes/knex.abstractsqldriver"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlDriver")),"<",(0,p.kt)("a",{parentName:"td",href:"/docs/api/classes/knex.abstractsqlconnection"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlConnection")),">",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entityName")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entityname"},(0,p.kt)("em",{parentName:"a"},"EntityName")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.entityrepository"},(0,p.kt)("em",{parentName:"a"},"EntityRepository")),"<T",">"),(0,p.kt)("p",null,"Overrides: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/knex/src/SqlEntityRepository.ts#L6"},"packages/knex/src/SqlEntityRepository.ts:6")),(0,p.kt)("h2",{id:"properties"},"Properties"),(0,p.kt)("h3",{id:"_em"},"_","em"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,p.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,p.kt)("strong",{parentName:"p"},"_","em"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqldriver"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqlconnection"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlConnection")),">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository"),".",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository#_em"},"_em")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"entityname"},"entityName"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,p.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,p.kt)("strong",{parentName:"p"},"entityName"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entityname"},(0,p.kt)("em",{parentName:"a"},"EntityName")),"<T",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository"),".",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository#entityname"},"entityName")),(0,p.kt)("h2",{id:"accessors"},"Accessors"),(0,p.kt)("h3",{id:"em"},"em"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("inlineCode",{parentName:"p"},"Protected"),"get ",(0,p.kt)("strong",{parentName:"p"},"em"),"(): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqldriver"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqlconnection"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlConnection")),">",">"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqldriver"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.abstractsqlconnection"},(0,p.kt)("em",{parentName:"a"},"AbstractSqlConnection")),">",">"),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/knex/src/SqlEntityRepository.ts#L27"},"packages/knex/src/SqlEntityRepository.ts:27")),(0,p.kt)("h2",{id:"methods"},"Methods"),(0,p.kt)("h3",{id:"assign"},"assign"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"assign"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": T, ",(0,p.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">","): T"),(0,p.kt)("p",null,"Shortcut for ",(0,p.kt)("inlineCode",{parentName:"p"},"wrap(entity).assign(data, { em })")),(0,p.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},"T")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"data")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," T"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L259"},"packages/core/src/entity/EntityRepository.ts:259")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"canpopulate"},"canPopulate"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"canPopulate"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"property"),": ",(0,p.kt)("em",{parentName:"p"},"string"),"): ",(0,p.kt)("em",{parentName:"p"},"boolean")),(0,p.kt)("p",null,"Checks whether given property can be populated on the entity."),(0,p.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"property")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"boolean")),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L223"},"packages/core/src/entity/EntityRepository.ts:223")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"count"},"count"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"count"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"where?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"options?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.countoptions"},(0,p.kt)("em",{parentName:"a"},"CountOptions")),"<T",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<number",">"),(0,p.kt)("p",null,"Returns total number of entities matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query."),(0,p.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"options")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.countoptions"},(0,p.kt)("em",{parentName:"a"},"CountOptions")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<number",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L274"},"packages/core/src/entity/EntityRepository.ts:274")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"create"},"create"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"create"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">","): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">"),(0,p.kt)("p",null,"Creates new instance of given entity and populates it with given data"),(0,p.kt)("h4",{id:"type-parameters-2"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string"),"[]")))),(0,p.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"data")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L252"},"packages/core/src/entity/EntityRepository.ts:252")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"createquerybuilder"},"createQueryBuilder"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"createQueryBuilder"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"alias?"),": ",(0,p.kt)("em",{parentName:"p"},"string"),"): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.querybuilder"},(0,p.kt)("em",{parentName:"a"},"QueryBuilder")),"<T",">"),(0,p.kt)("p",null,"Creates a QueryBuilder instance"),(0,p.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"alias?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/knex.querybuilder"},(0,p.kt)("em",{parentName:"a"},"QueryBuilder")),"<T",">"),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/knex/src/SqlEntityRepository.ts#L16"},"packages/knex/src/SqlEntityRepository.ts:16")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"find"},"find"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"find"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"options?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.findoptions"},(0,p.kt)("em",{parentName:"a"},"FindOptions")),"<T, P",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Finds all entities matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query. You can pass additional options via the ",(0,p.kt)("inlineCode",{parentName:"p"},"options")," parameter."),(0,p.kt)("h4",{id:"type-parameters-3"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"options?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.findoptions"},(0,p.kt)("em",{parentName:"a"},"FindOptions")),"<T, P",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L81"},"packages/core/src/entity/EntityRepository.ts:81")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"find"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"limit?"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"offset?"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Finds all entities matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query."),(0,p.kt)("h4",{id:"type-parameters-4"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"limit?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"offset?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L86"},"packages/core/src/entity/EntityRepository.ts:86")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"findall"},"findAll"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findAll"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"options?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.findoptions"},(0,p.kt)("em",{parentName:"a"},"FindOptions")),"<T, P",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Finds all entities of given type. You can pass additional options via the ",(0,p.kt)("inlineCode",{parentName:"p"},"options")," parameter."),(0,p.kt)("h4",{id:"type-parameters-5"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"options?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.findoptions"},(0,p.kt)("em",{parentName:"a"},"FindOptions")),"<T, P",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L118"},"packages/core/src/entity/EntityRepository.ts:118")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findAll"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"limit?"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"offset?"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Finds all entities of given type."),(0,p.kt)("h4",{id:"type-parameters-6"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"limit?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"offset?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L123"},"packages/core/src/entity/EntityRepository.ts:123")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"findandcount"},"findAndCount"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findAndCount"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"options?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.findoptions"},(0,p.kt)("em",{parentName:"a"},"FindOptions")),"<T, readonly ",(0,p.kt)("em",{parentName:"p"},"string"),"[] ","|"," readonly keyof T[] ","|"," boolean ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," PopulateChildren<T",">",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<[",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[], ",(0,p.kt)("em",{parentName:"p"},"number"),"]",">"),(0,p.kt)("p",null,"Calls ",(0,p.kt)("inlineCode",{parentName:"p"},"em.find()")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"em.count()")," with the same arguments (where applicable) and returns the results as tuple\nwhere first element is the array of entities and the second is the count."),(0,p.kt)("h4",{id:"type-parameters-7"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"options?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.findoptions"},(0,p.kt)("em",{parentName:"a"},"FindOptions")),"<T, readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," boolean ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," PopulateChildren<T",">",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<[",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[], ",(0,p.kt)("em",{parentName:"p"},"number"),"]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L99"},"packages/core/src/entity/EntityRepository.ts:99")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findAndCount"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"limit?"),": ",(0,p.kt)("em",{parentName:"p"},"number"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"offset?"),": ",(0,p.kt)("em",{parentName:"p"},"number"),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<[",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[], ",(0,p.kt)("em",{parentName:"p"},"number"),"]",">"),(0,p.kt)("p",null,"Calls ",(0,p.kt)("inlineCode",{parentName:"p"},"em.find()")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"em.count()")," with the same arguments (where applicable) and returns the results as tuple\nwhere first element is the array of entities and the second is the count."),(0,p.kt)("h4",{id:"type-parameters-8"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"limit?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"offset?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"number"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<[",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[], ",(0,p.kt)("em",{parentName:"p"},"number"),"]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L105"},"packages/core/src/entity/EntityRepository.ts:105")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"findone"},"findOne"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findOne"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("em",{parentName:"p"},"null")," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Finds first entity matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query."),(0,p.kt)("h4",{id:"type-parameters-9"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("em",{parentName:"p"},"null")," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L41"},"packages/core/src/entity/EntityRepository.ts:41")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findOne"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.findoneoptions"},(0,p.kt)("em",{parentName:"a"},"FindOneOptions")),"<T, P",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("em",{parentName:"p"},"null")," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Finds first entity matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query."),(0,p.kt)("h4",{id:"type-parameters-10"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.findoneoptions"},(0,p.kt)("em",{parentName:"a"},"FindOneOptions")),"<T, P",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("em",{parentName:"p"},"null")," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L46"},"packages/core/src/entity/EntityRepository.ts:46")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"findoneorfail"},"findOneOrFail"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findOneOrFail"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Finds first entity matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query. If nothing found, it will throw an error.\nYou can override the factory for creating this method via ",(0,p.kt)("inlineCode",{parentName:"p"},"options.failHandler")," locally\nor via ",(0,p.kt)("inlineCode",{parentName:"p"},"Configuration.findOneOrFailHandler")," globally."),(0,p.kt)("h4",{id:"type-parameters-11"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-14"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L60"},"packages/core/src/entity/EntityRepository.ts:60")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"findOneOrFail"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"populate?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.findoneorfailoptions"},(0,p.kt)("em",{parentName:"a"},"FindOneOrFailOptions")),"<T, P",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Finds first entity matching your ",(0,p.kt)("inlineCode",{parentName:"p"},"where")," query. If nothing found, it will throw an error.\nYou can override the factory for creating this method via ",(0,p.kt)("inlineCode",{parentName:"p"},"options.failHandler")," locally\nor via ",(0,p.kt)("inlineCode",{parentName:"p"},"Configuration.findOneOrFailHandler")," globally."),(0,p.kt)("h4",{id:"type-parameters-12"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/enums/core.loadstrategy"},(0,p.kt)("em",{parentName:"a"},"LoadStrategy"))," ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">"),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"any"))))),(0,p.kt)("h4",{id:"parameters-15"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.findoneorfailoptions"},(0,p.kt)("em",{parentName:"a"},"FindOneOrFailOptions")),"<T, P",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L67"},"packages/core/src/entity/EntityRepository.ts:67")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"flush"},"flush"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"flush"),"(): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,p.kt)("p",null,"Flushes all changes to objects that have been queued up to now to the database.\nThis effectively synchronizes the in-memory state of managed objects with the database.\nThis method is a shortcut for ",(0,p.kt)("inlineCode",{parentName:"p"},"em.flush()"),", in other words, it will flush the whole UoW,\nnot just entities registered via this particular repository."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L166"},"packages/core/src/entity/EntityRepository.ts:166")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"getknex"},"getKnex"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"getKnex"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type?"),": ",(0,p.kt)("em",{parentName:"p"},"read")," ","|"," ",(0,p.kt)("em",{parentName:"p"},"write"),"): ",(0,p.kt)("em",{parentName:"p"},"Knex"),"<any, unknown[]",">"),(0,p.kt)("p",null,"Returns configured knex instance."),(0,p.kt)("h4",{id:"parameters-16"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"read")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"write"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Knex"),"<any, unknown[]",">"),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/knex/src/SqlEntityRepository.ts#L23"},"packages/knex/src/SqlEntityRepository.ts:23")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"getreference"},"getReference"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"getReference"),"<PK",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"wrapped"),": ",(0,p.kt)("em",{parentName:"p"},"true"),"): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#identifiedreference"},(0,p.kt)("em",{parentName:"a"},"IdentifiedReference")),"<T, PK",">"),(0,p.kt)("p",null,"Gets a reference to the entity identified by the given type and identifier without actually loading it, if the entity is not yet loaded"),(0,p.kt)("h4",{id:"type-parameters-13"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"PK")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"number")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"symbol"))))),(0,p.kt)("h4",{id:"parameters-17"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"id")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"wrapped")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"true"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#identifiedreference"},(0,p.kt)("em",{parentName:"a"},"IdentifiedReference")),"<T, PK",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L201"},"packages/core/src/entity/EntityRepository.ts:201")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"getReference"),"<PK",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">","): T"),(0,p.kt)("p",null,"Gets a reference to the entity identified by the given type and identifier without actually loading it, if the entity is not yet loaded"),(0,p.kt)("h4",{id:"type-parameters-14"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"PK")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"number")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"symbol")),(0,p.kt)("td",{parentName:"tr",align:"left"},"keyof T")))),(0,p.kt)("h4",{id:"parameters-18"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"id")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," T"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L206"},"packages/core/src/entity/EntityRepository.ts:206")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"getReference"),"<PK",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"wrapped"),": ",(0,p.kt)("em",{parentName:"p"},"false"),"): T"),(0,p.kt)("p",null,"Gets a reference to the entity identified by the given type and identifier without actually loading it, if the entity is not yet loaded"),(0,p.kt)("h4",{id:"type-parameters-15"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"PK")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"number")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"symbol")),(0,p.kt)("td",{parentName:"tr",align:"left"},"keyof T")))),(0,p.kt)("h4",{id:"parameters-19"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"id")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"wrapped")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"false"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," T"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L211"},"packages/core/src/entity/EntityRepository.ts:211")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"map"},"map"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"map"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">","): T"),(0,p.kt)("p",null,"Maps raw database result to an entity and merges it to this EntityManager."),(0,p.kt)("h4",{id:"parameters-20"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"result")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," T"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L194"},"packages/core/src/entity/EntityRepository.ts:194")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"merge"},"merge"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"merge"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"data"),": T ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"refresh?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"convertCustomTypes?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),"): T"),(0,p.kt)("p",null,"Merges given entity to this EntityManager so it becomes managed. You can force refreshing of existing entities\nvia second parameter. By default it will return already loaded entities without modifying them."),(0,p.kt)("h4",{id:"parameters-21"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"data")),(0,p.kt)("td",{parentName:"tr",align:"left"},"T ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"refresh?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"convertCustomTypes?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," T"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L267"},"packages/core/src/entity/EntityRepository.ts:267")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"nativedelete"},"nativeDelete"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"nativeDelete"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"options?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.deleteoptions"},(0,p.kt)("em",{parentName:"a"},"DeleteOptions")),"<T",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<number",">"),(0,p.kt)("p",null,"Fires native delete query. Calling this has no side effects on the context (identity map)."),(0,p.kt)("h4",{id:"parameters-22"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"options?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.deleteoptions"},(0,p.kt)("em",{parentName:"a"},"DeleteOptions")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<number",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L187"},"packages/core/src/entity/EntityRepository.ts:187")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"nativeinsert"},"nativeInsert"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"nativeInsert"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">",">"),(0,p.kt)("p",null,"Fires native insert query. Calling this has no side effects on the context (identity map)."),(0,p.kt)("h4",{id:"parameters-23"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"data")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#primary"},(0,p.kt)("em",{parentName:"a"},"Primary")),"<T",">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L173"},"packages/core/src/entity/EntityRepository.ts:173")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"nativeupdate"},"nativeUpdate"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"nativeUpdate"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"where"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"data"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"options?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.updateoptions"},(0,p.kt)("em",{parentName:"a"},"UpdateOptions")),"<T",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<number",">"),(0,p.kt)("p",null,"Fires native update query. Calling this has no side effects on the context (identity map)."),(0,p.kt)("h4",{id:"parameters-24"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"data")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#entitydata"},(0,p.kt)("em",{parentName:"a"},"EntityData")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"options?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.updateoptions"},(0,p.kt)("em",{parentName:"a"},"UpdateOptions")),"<T",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<number",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L180"},"packages/core/src/entity/EntityRepository.ts:180")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"persist"},"persist"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"persist"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">"," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","[]): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.idatabasedriver"},(0,p.kt)("em",{parentName:"a"},"IDatabaseDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.connection"},(0,p.kt)("em",{parentName:"a"},"Connection")),">",">"),(0,p.kt)("p",null,"Tells the EntityManager to make an instance managed and persistent.\nThe entity will be entered into the database at or before transaction commit or as a result of the flush operation."),(0,p.kt)("h4",{id:"parameters-25"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">"," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","[]")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.idatabasedriver"},(0,p.kt)("em",{parentName:"a"},"IDatabaseDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.connection"},(0,p.kt)("em",{parentName:"a"},"Connection")),">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L16"},"packages/core/src/entity/EntityRepository.ts:16")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"persistandflush"},"persistAndFlush"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"persistAndFlush"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">"," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","[]): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,p.kt)("p",null,"Persists your entity immediately, flushing all not yet persisted changes to the database too.\nEquivalent to ",(0,p.kt)("inlineCode",{parentName:"p"},"em.persist(e).flush()"),"."),(0,p.kt)("h4",{id:"parameters-26"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">"," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","[]")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L24"},"packages/core/src/entity/EntityRepository.ts:24")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"persistlater"},"persistLater"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"persistLater"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">"," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","[]): ",(0,p.kt)("em",{parentName:"p"},"void")),(0,p.kt)("p",null,"Tells the EntityManager to make an instance managed and persistent.\nThe entity will be entered into the database at or before transaction commit or as a result of the flush operation."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"deprecated"))," use ",(0,p.kt)("inlineCode",{parentName:"p"},"persist()")),(0,p.kt)("h4",{id:"parameters-27"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">"," ","|"," ",(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","[]")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"void")),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L34"},"packages/core/src/entity/EntityRepository.ts:34")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"populate"},"populate"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"populate"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"entities"),": T, ",(0,p.kt)("inlineCode",{parentName:"p"},"populate"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"where?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"refresh?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"validate?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Loads specified relations in batch. This will execute one query for each relation, that will populate it on all of the specified entities."),(0,p.kt)("h4",{id:"type-parameters-16"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"number")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"symbol")," ","|"," readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">")))),(0,p.kt)("h4",{id:"parameters-28"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entities")),(0,p.kt)("td",{parentName:"tr",align:"left"},"T")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"refresh?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"validate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L230"},"packages/core/src/entity/EntityRepository.ts:230")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"populate"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"entities"),": T[], ",(0,p.kt)("inlineCode",{parentName:"p"},"populate"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"where?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"refresh?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"validate?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Loads specified relations in batch. This will execute one query for each relation, that will populate it on all of the specified entities."),(0,p.kt)("h4",{id:"type-parameters-17"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"number")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"symbol")," ","|"," readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">")))),(0,p.kt)("h4",{id:"parameters-29"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entities")),(0,p.kt)("td",{parentName:"tr",align:"left"},"T[]")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"refresh?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"validate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L235"},"packages/core/src/entity/EntityRepository.ts:235")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"populate"),"<P",">","(",(0,p.kt)("inlineCode",{parentName:"p"},"entities"),": T ","|"," T[], ",(0,p.kt)("inlineCode",{parentName:"p"},"populate"),": P, ",(0,p.kt)("inlineCode",{parentName:"p"},"where?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">",", ",(0,p.kt)("inlineCode",{parentName:"p"},"orderBy?"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")),", ",(0,p.kt)("inlineCode",{parentName:"p"},"refresh?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"validate?"),": ",(0,p.kt)("em",{parentName:"p"},"boolean"),"): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">"," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Loads specified relations in batch. This will execute one query for each relation, that will populate it on all of the specified entities."),(0,p.kt)("h4",{id:"type-parameters-18"},"Type parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"P")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"string")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"number")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"boolean")," ","|"," ",(0,p.kt)("em",{parentName:"td"},"symbol")," ","|"," readonly ",(0,p.kt)("em",{parentName:"td"},"string"),"[] ","|"," readonly keyof T[] ","|"," ",(0,p.kt)("em",{parentName:"td"},"PopulateChildren"),"<T",">")))),(0,p.kt)("h4",{id:"parameters-30"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entities")),(0,p.kt)("td",{parentName:"tr",align:"left"},"T ","|"," T[]")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"populate")),(0,p.kt)("td",{parentName:"tr",align:"left"},"P")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"where?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#filterquery"},(0,p.kt)("em",{parentName:"a"},"FilterQuery")),"<T",">")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"orderBy?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/interfaces/core.queryordermap"},(0,p.kt)("em",{parentName:"a"},"QueryOrderMap")))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"refresh?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"validate?")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"boolean"))))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">"," ","|"," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#loaded"},(0,p.kt)("em",{parentName:"a"},"Loaded")),"<T, P",">","[]",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L240"},"packages/core/src/entity/EntityRepository.ts:240")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"remove"},"remove"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"remove"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","): ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.idatabasedriver"},(0,p.kt)("em",{parentName:"a"},"IDatabaseDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.connection"},(0,p.kt)("em",{parentName:"a"},"Connection")),">",">"),(0,p.kt)("p",null,"Marks entity for removal.\nA removed entity will be removed from the database at or before transaction commit or as a result of the flush operation."),(0,p.kt)("p",null,"To remove entities by condition, use ",(0,p.kt)("inlineCode",{parentName:"p"},"em.nativeDelete()"),"."),(0,p.kt)("h4",{id:"parameters-31"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entitymanager"},(0,p.kt)("em",{parentName:"a"},"EntityManager")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core.idatabasedriver"},(0,p.kt)("em",{parentName:"a"},"IDatabaseDriver")),"<",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.connection"},(0,p.kt)("em",{parentName:"a"},"Connection")),">",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L138"},"packages/core/src/entity/EntityRepository.ts:138")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"removeandflush"},"removeAndFlush"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"removeAndFlush"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","): ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,p.kt)("p",null,"Removes an entity instance immediately, flushing all not yet persisted changes to the database too.\nEquivalent to ",(0,p.kt)("inlineCode",{parentName:"p"},"em.remove(e).flush()")),(0,p.kt)("h4",{id:"parameters-32"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L146"},"packages/core/src/entity/EntityRepository.ts:146")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"removelater"},"removeLater"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"removeLater"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"entity"),": ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">","): ",(0,p.kt)("em",{parentName:"p"},"void")),(0,p.kt)("p",null,"Marks entity for removal.\nA removed entity will be removed from the database at or before transaction commit or as a result of the flush operation."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"deprecated"))," use ",(0,p.kt)("inlineCode",{parentName:"p"},"remove()")),(0,p.kt)("h4",{id:"parameters-33"},"Parameters:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"entity")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/docs/api/modules/core#anyentity"},(0,p.kt)("em",{parentName:"a"},"AnyEntity")),"<any",">")))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Returns:")," ",(0,p.kt)("em",{parentName:"p"},"void")),(0,p.kt)("p",null,"Inherited from: ",(0,p.kt)("a",{parentName:"p",href:"/docs/api/classes/core.entityrepository"},"EntityRepository")),(0,p.kt)("p",null,"Defined in: ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/mikro-orm/mikro-orm/blob/bcf1a0899b/packages/core/src/entity/EntityRepository.ts#L156"},"packages/core/src/entity/EntityRepository.ts:156")))}k.isMDXComponent=!0}}]);